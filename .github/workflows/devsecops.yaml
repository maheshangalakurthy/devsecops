name: DevSecOps Pipeline

on:
    workflow_dispatch: 
    push: 
        paths-ignore:
        # Can we use '**.md' ?
        - 'README.md'
        - 'SECURITY.md'
        - 'CONTRIBUTING.md'
        - 'CODE_OF_CONDUCT.md'
        - 'app/README.md'
        - 'LICENSE'
        - '.gitignore'
        branches: 
            - development
jobs:
    ci-build-pipeline:
        runs-on: ubuntu-20.04
        permissions:
          checks: write
          pull-requests: write
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
            
            - name: JDK 11 Setup
              uses: actions/setup-java@v4
              with:
                distribution: 'zulu'
                java-version: 11

            - name: Cache MVN dependencies
              id: mvn-cache
              uses: actions/cache@v3
              with:
                path: ~/.m2/repository
                key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
                restore-keys: |
                  ${{ runner.os }}-maven-
            
            - name: Build Artifact - Maven
              id: mvn-build
              run: mvn clean package -DskipTests=true
          
            - name: Unit Tests - JUnit and JaCoCo
              id: junit-jacoco
              run: mvn test

            - name: Publish Test Report
              uses: mikepenz/action-junit-report@v4
              if: success() || failure() # always run even if the previous step fails
              with:
                report_paths: 'target/surefire-reports/*.xml'
            - name: Upload Report
              uses: 'actions/upload-artifact@v2'
              with:
                name: jacoco-report
                path: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
        
            - name: Add coverage to PR
              id: jacoco
              uses: madrapps/jacoco-report@v1.2
              with:
                  paths: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
                  token: ${{ secrets.GITHUB_TOKEN }}
                  min-coverage-overall: 80
                  min-coverage-changed-files: 80
                  title: Code Coverage
        
            - name: Save Coverage To Environment Variable
              run: |
                  echo "TOTAL_COVERAGE=${{ steps.jacoco.outputs.coverage-overall }}" >> $GITHUB_ENV
                  echo "CHANGED_FILES_COVERAGE=${{ steps.jacoco.outputs.coverage-changed-files }}" >> $GITHUB_ENV
        
            - name: Print & Check Coverage Info
              run: |
                  import os
                  import sys
                  print("Total Coverage: " + str(os.environ["TOTAL_COVERAGE"]))
                  print("Changed Files Coverage: " + str(os.environ["CHANGED_FILES_COVERAGE"]))
                  if float(os.environ["TOTAL_COVERAGE"]) < 80 or float(os.environ["CHANGED_FILES_COVERAGE"]) < 80:
                    print("Insufficient Coverage!")
                    sys.exit(-1) # Cause Status Check Failure due to noncompliant coverage
                  sys.exit(0)
              shell: python
            # - name: Generate JaCoCo badge
            #   id: jacoco
            #   uses: cicirello/jacoco-badge-generator@v2
            #   with:
            #       badges-directory: badges
            #       generate-branches-badge: true
            #       generate-summary: true
          
            # - name: Log coverage percentages to workflow output
            #   run: |
            #     echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
            #     echo "branches = ${{ steps.jacoco.outputs.branches }}"
          
            # - name: Upload JaCoCo coverage report as a workflow artifact
            #   uses: actions/upload-artifact@v3
            #   with:
            #     name: jacoco-report
            #     path: target/site/jacoco/
          
            # - run: mkdir staging && cp target/*.jar staging
            # - uses: actions/upload-artifact@v3
            #   with:
            #     name: Package
            #     path: staging
   
                  

            
